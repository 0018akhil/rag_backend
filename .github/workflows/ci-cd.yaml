# .github/workflows/ci-cd.yaml
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build Docker image
      run: |
        docker build \
          --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
          --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} \
          --build-arg ALGORITHM=${{ secrets.ALGORITHM }} \
          --build-arg ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }} \
          --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          --build-arg S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
          --build-arg PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }} \
          --build-arg UNSTRUCTURED_API_KEY=${{ secrets.UNSTRUCTURED_API_KEY }} \
          --build-arg HUGGINGFACE_API_KEY=${{ secrets.HUGGINGFACE_API_KEY }} \
          --build-arg GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }} \
          -t ghcr.io/0018akhil/rag-backend:latest .

    - name: Push Docker image
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login ghcr.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push ghcr.io/0018akhil/rag-backend:latest

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.3'
      id: install

    - name: Set AKS context
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        resource-group: myRAGcluster_group
        cluster-name: myRAGcluster

    - name: Create secret for rag-backend
      run: |
        kubectl create secret generic rag-secrets \
          --from-literal=DATABASE_URL=${{ secrets.DATABASE_URL }} \
          --from-literal=SECRET_KEY=${{ secrets.SECRET_KEY }} \
          --from-literal=ALGORITHM=${{ secrets.ALGORITHM }} \
          --from-literal=ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }} \
          --from-literal=AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          --from-literal=AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          --from-literal=S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} \
          --from-literal=PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }} \
          --from-literal=UNSTRUCTURED_API_KEY=${{ secrets.UNSTRUCTURED_API_KEY }} \
          --from-literal=HUGGINGFACE_API_KEY=${{ secrets.HUGGINGFACE_API_KEY }} \
          --from-literal=GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
    
    - name: Create secret for ghcr.io    
      run: |
        kubectl create secret docker-registry ghcr-secret \
        --docker-server=https://ghcr.io \
        --docker-username==${{ secrets.DOCKER_USERNAME }} \
        --docker-password=${{ secrets.DOCKER_PASSWORD }}

    - name: Deploy to AKS
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml